{"version":3,"sources":["Components/Right/Right.js","Components/Left/GridTip.js","Components/Left/Left.js","App.js","reportWebVitals.js","index.js"],"names":["Right","props","tipResult","tip","Number","numberTip","numberPeople","Math","round","EPSILON","className","total","numberBill","totalResult","type","onClick","handleClickReset","GridTip","map","tipValues","index","value","selectedTip","e","handleClickTip","bill","handleSelectedTip","id","placeholder","onChange","handleChangeTip","Left","useState","tipError","setTipError","peopleError","setPeopleError","handleInputError","x","target","handleChangeBill","handleChangePeople","style","outline","onBlur","customTip","handleChangeCustom","App","setNumberBill","setNumberPeople","setNumberTip","setCustomTip","setSelectedTip","people","custom","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.311a2bd3.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\r\nimport '../Right/Right.css'\r\n\r\nfunction Right(props) {\r\n\r\n    const tipResult = () => {\r\n        let tip = Number(props.numberTip && props.numberPeople ? props.numberTip / props.numberPeople : 0)\r\n        return Math.round((tip + Number.EPSILON) * 100) / 100\r\n    }\r\n\r\n    const totalResult = () => {\r\n\r\n        let total = Number(props.numberBill && props.numberPeople ? props.numberBill / props.numberPeople + tipResult() : 0)\r\n        return Math.round((total + Number.EPSILON) * 100) / 100\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <form>\r\n                <div className={'background'}>\r\n                    <div className={'containerRight'}>\r\n                        <div>\r\n                            <h6>Tip Amount</h6>\r\n                            <span>/ person</span>\r\n                        </div>\r\n                        <div>\r\n                            <p> $ {tipResult()}</p>{/*(142.55 * 0.15 / 5)*/}\r\n                        </div>\r\n                    </div>\r\n                    <div className={'containerRight'}>\r\n                        <div>\r\n                            <h6>Total</h6>\r\n                            <span>/ person</span>\r\n                        </div>\r\n                        <div>\r\n                            <p>$ {totalResult()}</p> {/* (142.55 / 5 + 4.27)*/}\r\n                        </div>\r\n                    </div>\r\n                    <button type={'reset'}\r\n                            className={'buttonRight'}\r\n                            onClick={() => props.handleClickReset()}> Reset\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Right;","import React, {Fragment} from 'react';\r\nimport '../Left/GripTip.css'\r\n\r\nfunction GridTip(props) {\r\n\r\n    const tipValues = [5, 10, 15, 25, 50];\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={'gridTip'}>\r\n                {tipValues.map((tipValues, index) => {\r\n                        return (\r\n                            <div key={index}>\r\n                                <button value={tipValues / 100}\r\n                                        className={props.selectedTip === index ? 'buttonTip' : 'pepe'}\r\n                                        onClick={(e) => {props.handleClickTip(e, props.bill); props.handleSelectedTip(index)}}>{tipValues}%</button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                )\r\n                }\r\n                <div><input value={props.numberTip}\r\n                            id={'custom'}\r\n                            placeholder={'Custom'}\r\n                            type={'number'}\r\n                            onChange={(e) => props.handleChangeTip(e, props.bill)}/>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default GridTip;","import React, {Fragment, useState} from 'react';\r\nimport GridTip from \"./GridTip\";\r\nimport './Left.css'\r\n\r\nfunction Left(props) {\r\n    const [tipError, setTipError] = useState('')\r\n    const [peopleError, setPeopleError] = useState('')\r\n\r\n    const handleInputError = (e, x) =>{\r\n        switch (x) {\r\n            case \"bill\":\r\n                if (e.target.value < 0) {\r\n                    setTipError(\"Bill can not be negative.\")\r\n                    props.handleChangeBill('')\r\n                } else setTipError('')\r\n                break;\r\n            case \"people\":\r\n                if (e.target.value < 0) {\r\n                    setPeopleError(\"People can not be zero.\")\r\n                    props.handleChangePeople('')\r\n                }else setPeopleError('')\r\n                    break\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={'leftContainer'}>\r\n                <h5>Bill</h5>\r\n                <input placeholder={0}\r\n                       value={props.numberBill}\r\n                       className={'regularTips'}\r\n                       style={{\r\n                           outline: tipError ? \"1px solid red\" : ''\r\n                       }}\r\n                       type={'number'}\r\n                       onChange={e => props.handleChangeBill(e.target.value)}\r\n                       onBlur={e => handleInputError(e,'bill')}/>\r\n                {tipError && <span className={'error'}>Ingrese un numero mayor a 0</span>}\r\n                <h5>Select Tip %</h5>\r\n                <GridTip bill={props.numberBill}\r\n                         handleClickTip={props.handleClickTip}\r\n                         handleChangeTip={props.handleChangeTip}\r\n                         customTip={props.customTip}\r\n                         handleChangeCustom={props.handleChangeCustom}\r\n                         selectedTip={props.selectedTip}\r\n                         handleSelectedTip={props.handleSelectedTip}/>\r\n                <h5>Number of people</h5>\r\n                <input placeholder={0}\r\n                       value={props.numberPeople}\r\n                       className={'customTips'}\r\n                       style={{\r\n                           outline: peopleError ? \"1px solid red\" : ''\r\n                       }}\r\n                       type={'number'}\r\n                       onChange={e => props.handleChangePeople(e.target.value)}\r\n                       onBlur={e => handleInputError(e,'people')}/>\r\n                {peopleError && <span className={'error'}>EROR</span>}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Left;","import './App.css';\nimport {Fragment, useState} from \"react\";\nimport Right from \"./Components/Right/Right\";\nimport Left from \"./Components/Left/Left\";\n\n\nfunction App() {\n\n    const [numberBill, setNumberBill] = useState('')\n    const [numberPeople, setNumberPeople] = useState('')\n    const [numberTip, setNumberTip] = useState(0)\n    const [customTip, setCustomTip] = useState(0)\n    const [selectedTip, setSelectedTip] = useState(null)\n\n\n    const handleClickTip = (e, bill) => {\n        setNumberTip(e.target.value * bill)\n    }\n    const handleSelectedTip = (index) => {\n        console.log(index)\n      setSelectedTip(index)\n    }\n    const handleChangeTip = (e, bill) => {\n        setNumberTip(e.target.value / 100 * bill)\n        setCustomTip(e.target.value)\n    }\n\n    const handleChangeBill = (bill) => {\n        setNumberBill(bill)\n    }\n\n    const handleChangePeople = (people) => {\n        setNumberPeople(people)\n    }\n\n    const handleChangeCustom = (custom) => {\n        setCustomTip(custom)\n    }\n    \n    \n    const handleClickReset = () => {\n        setNumberBill('')\n        setNumberPeople('')\n        setNumberTip('')\n        setCustomTip('')\n        setSelectedTip(null)\n    }\n\n    return (\n        <Fragment>\n            <div className={'fondo'}>\n                <div className={'leftRightContainer'}>\n                    <div className={'container'}>\n                        <Left handleClickTip={handleClickTip}\n                              handleChangeTip={handleChangeTip}\n                              handleChangeBill={handleChangeBill}\n                              numberBill={numberBill}\n                              numberTip={numberTip}\n                              numberPeople={numberPeople}\n                              handleChangePeople={handleChangePeople}\n                              handleClickReset={handleClickReset}\n                              handleChangeCustom={handleChangeCustom}\n                              customTip={customTip}\n                              selectedTip={selectedTip}\n                              handleSelectedTip={handleSelectedTip}/>\n\n                        <Right numberTip={numberTip}\n                               numberBill={numberBill}\n                               numberPeople={numberPeople}\n                               handleClickReset={handleClickReset}/>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}