{"version":3,"sources":["Components/Right/Right.js","Components/Left/GridTip.js","Components/Left/Left.js","App.js","reportWebVitals.js","index.js"],"names":["Right","props","tipResult","numberTip","numberPeople","className","Number","numberBill","GridTip","map","tipValues","index","value","onClick","e","handleClickTip","bill","type","onChange","handleChangeTip","Left","handleChangeBill","target","handleChangePeople","App","useState","setNumberBill","numberPeolple","setNumberPeople","setNumberTip","people","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSA0CeA,MAvCf,SAAeC,GAEX,IAAMC,EAAY,WACd,OAAQD,EAAME,WAAaF,EAAMG,aAAeH,EAAME,UAAYF,EAAMG,aAAe,GAO3F,OACI,cAAC,WAAD,UACI,gCACI,sBAAKC,UAAW,iBAAhB,UACI,gCACI,4CACA,+CAEJ,8BACI,oCAAOH,YAGf,sBAAKG,UAAW,iBAAhB,UACI,gCACI,uCACA,+CAEJ,gCACI,mCArBRC,OAAOL,EAAMM,YAAcN,EAAMG,aAAeH,EAAMM,WAAaN,EAAMG,aAAeF,IAAc,QAoBlG,UAIJ,wBAAQG,UAAW,cAAnB,0B,MCRDG,MAvBf,SAAiBP,GAIb,OACI,cAAC,WAAD,UACI,sBAAKI,UAAW,UAAhB,UAJU,CAAC,EAAG,GAAI,GAAI,GAAI,IAKXI,KAAI,SAACC,EAAWC,GACnB,OACI,8BACI,wBAAQC,MAAOF,EAAY,IACnBG,QAAS,SAACC,GAAD,OAAOb,EAAMc,eAAeD,EAAGb,EAAMe,OADtD,SAC8DN,KAFxDC,MAQtB,8BAAK,uBAAOM,KAAM,SAAUC,SAAU,SAACJ,GAAD,OAAOb,EAAMkB,gBAAgBL,EAAGb,EAAMe,iBCA7EI,MAjBf,SAAcnB,GAEV,OACI,cAAC,WAAD,UACI,gCACI,sCACA,uBAAOgB,KAAM,SAAUC,SAAU,SAAAJ,GAAC,OAAIb,EAAMoB,iBAAiBP,EAAEQ,OAAOV,UACtE,8CACA,cAAC,EAAD,CAASI,KAAMf,EAAMM,WAAYQ,eAAgBd,EAAMc,eAC9CI,gBAAiBlB,EAAMkB,kBAChC,kDACA,uBAAOF,KAAM,SAAUC,SAAU,SAAAJ,GAAC,OAAIb,EAAMsB,mBAAmBT,EAAEQ,OAAOV,gBC8BzEY,MAtCf,WAEI,MAAoCC,mBAAS,MAA7C,mBAAOlB,EAAP,KAAmBmB,EAAnB,KACA,EAAyCD,mBAAS,MAAlD,mBAAOE,EAAP,KAAsBC,EAAtB,KACA,EAAkCH,mBAAS,MAA3C,mBAAOtB,EAAP,KAAkB0B,EAAlB,KAmBA,OACI,cAAC,WAAD,UACI,sBAAKxB,UAAW,YAAhB,UACI,cAAC,EAAD,CAAMU,eApBK,SAACD,EAAGE,GACvBa,EAAaf,EAAEQ,OAAOV,MAAQI,IAoBhBG,gBAjBM,SAACL,EAAGE,GACxBa,EAAaf,EAAEQ,OAAOV,MAAQ,IAAMI,IAiBtBK,iBAdO,SAACL,GACtBU,EAAcV,IAcAT,WAAYA,EACZJ,UAAWA,EACXoB,mBAbS,SAACO,GACxBF,EAAgBE,MAaR,cAAC,EAAD,CAAO3B,UAAWA,EAAWI,WAAYA,EAAYH,aAAcuB,UC1BpEI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9bd4e385.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\r\nimport '../Right/Right.css'\r\n\r\nfunction Right(props) {\r\n\r\n    const tipResult = () => {\r\n        return (props.numberTip && props.numberPeople ? props.numberTip / props.numberPeople : 0)\r\n    }\r\n\r\n    const totalResult = () => {\r\n        return (Number(props.numberBill && props.numberPeople ? props.numberBill / props.numberPeople + tipResult() : '0'))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div>\r\n                <div className={'containerRight'}>\r\n                    <div>\r\n                        <h6>Tip Amount</h6>\r\n                        <span>/ person</span>\r\n                    </div>\r\n                    <div>\r\n                        <p> $ {tipResult()}</p>{/*(142.55 * 0.15 / 5)*/}\r\n                    </div>\r\n                </div>\r\n                <div className={'containerRight'}>\r\n                    <div>\r\n                        <h6>Total</h6>\r\n                        <span>/ person</span>\r\n                    </div>\r\n                    <div>\r\n                        <p>$ {totalResult()}</p> {/* (142.55 / 5 + 4.27)*/}\r\n                    </div>\r\n                </div>\r\n                <button className={'buttonRight'}> Reset</button>\r\n            </div>\r\n\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Right;","import React, {Fragment} from 'react';\r\nimport '../Left/GripTip.css'\r\n\r\nfunction GridTip(props) {\r\n\r\n    const tipValues = [5, 10, 15, 25, 50];\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={'gridTip'}>\r\n                {tipValues.map((tipValues, index) => {\r\n                        return (\r\n                            <div key={index}>\r\n                                <button value={tipValues / 100}\r\n                                        onClick={(e) => props.handleClickTip(e, props.bill)}>{tipValues}</button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                )\r\n                }\r\n                <div><input type={'number'} onChange={(e) => props.handleChangeTip(e, props.bill)}/></div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default GridTip;","import React, {Fragment} from 'react';\r\nimport GridTip from \"./GridTip\";\r\n\r\nfunction Left(props) {\r\n\r\n    return (\r\n        <Fragment>\r\n            <div>\r\n                <h5>Bill</h5>\r\n                <input type={'number'} onChange={e => props.handleChangeBill(e.target.value)}/>\r\n                <h5>Select Tip %</h5>\r\n                <GridTip bill={props.numberBill} handleClickTip={props.handleClickTip}\r\n                         handleChangeTip={props.handleChangeTip}/>\r\n                <h5>Number of people</h5>\r\n                <input type={'number'} onChange={e => props.handleChangePeople(e.target.value)}/>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Left;","import './App.css';\nimport {Fragment, useState} from \"react\";\nimport Right from \"./Components/Right/Right\";\nimport Left from \"./Components/Left/Left\";\n\n\nfunction App() {\n\n    const [numberBill, setNumberBill] = useState(null)\n    const [numberPeolple, setNumberPeople] = useState(null)\n    const [numberTip, setNumberTip] = useState(null)\n\n    const handleClickTip = (e, bill) => {\n        setNumberTip(e.target.value * bill)\n    }\n\n    const handleChangeTip = (e, bill) => {\n        setNumberTip(e.target.value / 100 * bill)\n    }\n\n    const handleChangeBill = (bill) => {\n        setNumberBill(bill)\n    }\n\n    const handleChangePeople = (people) => {\n        setNumberPeople(people)\n    }\n\n\n    return (\n        <Fragment>\n            <div className={'container'}>\n                <Left handleClickTip={handleClickTip}\n                      handleChangeTip={handleChangeTip}\n                      handleChangeBill={handleChangeBill}\n                      numberBill={numberBill}\n                      numberTip={numberTip}\n                      handleChangePeople={handleChangePeople}/>\n                <Right numberTip={numberTip} numberBill={numberBill} numberPeople={numberPeolple}/>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}