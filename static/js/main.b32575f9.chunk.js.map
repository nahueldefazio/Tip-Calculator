{"version":3,"sources":["Components/Right/Right.js","Components/Left/GridTip.js","Components/Left/Left.js","App.js","reportWebVitals.js","index.js"],"names":["Right","props","tipResult","tip","Number","numberTip","numberPeople","Math","round","EPSILON","className","total","numberBill","totalResult","type","onClick","handleClickReset","GridTip","map","tipValues","index","value","e","handleClickTip","bill","customTip","id","placeholder","onChange","handleChangeTip","Left","resetValue","inputStyle","handleChangeBill","target","handleChangeCustom","handleChangePeople","App","useState","setNumberBill","numberPeolple","setNumberPeople","setNumberTip","setCustomTip","people","custom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b32575f9.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\r\nimport '../Right/Right.css'\r\n\r\nfunction Right(props) {\r\n\r\n    const tipResult = () => {\r\n        let tip = Number(props.numberTip && props.numberPeople ? props.numberTip / props.numberPeople : 0)\r\n        return Math.round((tip + Number.EPSILON) * 100) / 100\r\n    }\r\n\r\n    const totalResult = () => {\r\n\r\n        let total = Number(props.numberBill && props.numberPeople ? props.numberBill / props.numberPeople + tipResult() : 0)\r\n        return Math.round((total + Number.EPSILON) * 100) / 100\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <form>\r\n                <div className={'background'}>\r\n                    <div className={'containerRight'}>\r\n                        <div>\r\n                            <h6>Tip Amount</h6>\r\n                            <span>/ person</span>\r\n                        </div>\r\n                        <div>\r\n                            <p> $ {tipResult()}</p>{/*(142.55 * 0.15 / 5)*/}\r\n                        </div>\r\n                    </div>\r\n                    <div className={'containerRight'}>\r\n                        <div>\r\n                            <h6>Total</h6>\r\n                            <span>/ person</span>\r\n                        </div>\r\n                        <div>\r\n                            <p>$ {totalResult()}</p> {/* (142.55 / 5 + 4.27)*/}\r\n                        </div>\r\n                    </div>\r\n                    <button type={'reset'}\r\n                            className={'buttonRight'}\r\n                            onClick={() => props.handleClickReset()}> Reset\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Right;","import React, {Fragment} from 'react';\r\nimport '../Left/GripTip.css'\r\n\r\nfunction GridTip(props) {\r\n\r\n    const tipValues = [5, 10, 15, 25, 50];\r\n    const resetCustom  = () =>{\r\n        return props.customTip === 0 ? '' : props.customTip\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={'gridTip'}>\r\n                {tipValues.map((tipValues, index) => {\r\n                        return (\r\n                            <div key={index}>\r\n                                <button value={tipValues / 100}\r\n                                        onClick={(e) => props.handleClickTip(e, props.bill)}>{tipValues}%</button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                )\r\n                }\r\n                <div><input value={resetCustom()}\r\n                            id={'custom'}\r\n                            placeholder={'Custom'}\r\n                            type={'number'}\r\n                            onChange={(e) => props.handleChangeTip(e, props.bill)}/>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default GridTip;","import React, {Fragment} from 'react';\r\nimport GridTip from \"./GridTip\";\r\nimport './Left.css'\r\n\r\nfunction Left(props) {\r\n\r\n    const resetValue  = (inputStyle) =>{\r\n        switch (inputStyle) {\r\n            case \"bill\":\r\n                return props.numberBill === 0 ? '' : props.numberBill;\r\n                break;\r\n            case \"people\":\r\n                return props.numberPeople === 0 ? '' : props.numberPeople;\r\n                break;\r\n            default : break\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div className={'leftContainer'}>\r\n                <h5>Bill</h5>\r\n                <input placeholder={0}\r\n                       value={resetValue('bill')}\r\n                       className={'regularTips'}\r\n                       type={'number'}\r\n                       onChange={e => props.handleChangeBill(e.target.value)}/>\r\n                <h5>Select Tip %</h5>\r\n                <GridTip bill={props.numberBill}\r\n                         handleClickTip={props.handleClickTip}\r\n                         handleChangeTip={props.handleChangeTip}\r\n                         customTip={props.customTip}\r\n                         handleChangeCustom={props.handleChangeCustom}/>\r\n                <h5>Number of people</h5>\r\n                <input placeholder={0}\r\n                       value={resetValue('people')}\r\n                       className={'customTips'}\r\n                       type={'number'}\r\n                       onChange={e => props.handleChangePeople(e.target.value)}/>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Left;","import './App.css';\nimport {Fragment, useState} from \"react\";\nimport Right from \"./Components/Right/Right\";\nimport Left from \"./Components/Left/Left\";\n\n\nfunction App() {\n\n    const [numberBill, setNumberBill] = useState(0)\n    const [numberPeolple, setNumberPeople] = useState(0)\n    const [numberTip, setNumberTip] = useState(0)\n    const [customTip, setCustomTip] = useState(0)\n\n    const handleClickTip = (e, bill) => {\n        setNumberTip(e.target.value * bill)\n    }\n\n    const handleChangeTip = (e, bill) => {\n        setNumberTip(e.target.value / 100 * bill)\n        setCustomTip(e.target.value)\n    }\n\n    const handleChangeBill = (bill) => {\n        setNumberBill(bill)\n    }\n\n    const handleChangePeople = (people) => {\n        setNumberPeople(people)\n    }\n\n    const handleChangeCustom = (custom) => {\n      setCustomTip(custom)\n    }\n\n    const handleClickReset = () =>{\n        setNumberBill(0.00)\n        setNumberPeople(0.00)\n        setNumberTip(0.00)\n        setCustomTip(0.00)\n\n    }\n\n\n\n    return (\n        <Fragment>\n            <div className={'fondo'}>\n                <div className={'leftRightContainer'}>\n                    <div className={'container'}>\n                        <Left handleClickTip={handleClickTip}\n                              handleChangeTip={handleChangeTip}\n                              handleChangeBill={handleChangeBill}\n                              numberBill={numberBill}\n                              numberTip={numberTip}\n                              numberPeople={numberPeolple}\n                              handleChangePeople={handleChangePeople}\n                              handleClickReset={handleClickReset}\n                              handleChangeCustom={handleChangeCustom}\n                              customTip={customTip}/>\n                        <Right numberTip={numberTip}\n                               numberBill={numberBill}\n                               numberPeople={numberPeolple}\n                               handleClickReset={handleClickReset}/>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}